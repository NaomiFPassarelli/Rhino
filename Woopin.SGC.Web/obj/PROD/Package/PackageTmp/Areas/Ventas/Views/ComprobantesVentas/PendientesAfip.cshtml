@using Woopin.SGC.Model.Common
@{
    ViewBag.Title = "Comprobantes";
    ViewBag.SectionIcon = "file-text-o";
    ViewBag.SectionTitle = "Listado de Comprobantes pendientes de CAE";
}
<div class="action-bar row">
    <a class="boton place-left" id="BtnCreate" title="Crear Comprobane" href="@Url.Action("Nuevo")">
        <i class="fa fa-plus-circle i-green"></i>  Crear Comprobante
    </a>
    <div class="place-right search-box">
        <input type="search" name="TbxSearch" id="TbxSearch" placeholder="Buscar Comprobante..." />
        <button type="submit" class="button-clear hide" title="Limpiar filtro" id="BtnClearSearch"></button>
        <button type="submit" class="button-search" title="Buscar" id="BtnSearch"></button>
    </div>
    <a class="boton boton-i place-right" id="BtnRefresh" title="Actualizar">
        <i class="fa fa-refresh i-blue"></i>
    </a>
    <a class="boton boton-i place-right" id="BtnExportXLS" title="Exportar a Excel">
        <span class="icon-xls"></span>
    </a>
</div>
<div class="table-container">
    <table id="GridComprobantesVentas"></table>
    <div id="GridComprobantesVentas_pager"></div>
</div>
<div id="ListadoPendientesAfip-detalle-dialog"></div>
@section Scripts{
    @Scripts.Render("~/bundles/jqgrid")
    @Scripts.Render("~/bundles/select2")
    @Styles.Render("~/Scripts/select2/select2.css")
    @Scripts.Render("~/bundles/jqueryui")
    <script type="text/javascript">
    $(document).ready(function () {
        ListadoPendientesAfip.init();
    });

    var ListadoPendientesAfip = {

        init: function () {
            $('#BtnExportXLS').click(ListadoPendientesAfip.ExportToExcel);
            /* Buscador de arriba */
            $.SetupSearchTextbox('#GridComprobantesVentas', ["Fecha", "Numero"]);
            $('#BtnRefresh').bind('click', function () {
                ListadoPendientesAfip.ReloadGrid();
            });

            $('#BtnFilter').click(ListadoPendientesAfip.ReloadGrid);

            $(document).on('click', '.BtnVerDialog', ListadoPendientesAfip.VerDetalleDialog);
            $(document).on('click', '.BtnReRun', ListadoPendientesAfip.ReRunCAEJob);

            $('#ClienteID').change(ListadoPendientesAfip.OnClienteChange);
            $('.BtnClearSelect2').on('click', function () {
                var IdClear = $(this).attr('data-rel');
                var IdClearInput = $(this).attr('data-input');
                ListadoPendientesAfip.ClearSelect2(IdClear, IdClearInput);
            });

            /* Armo la grilla del ABM */
            $('#GridComprobantesVentas').CreateCommonGrid({
                url: '@Url.Action("GetAllByCliente")',
                serializeGridData: function (postData) {
                    dates = {
                        id: 0,
                        start: '@DateTime.Now.AddYears(-50).ToString("dd/MM/yyyy")',
                        end: '@DateTime.Now.ToString("dd/MM/yyyy")',
                        filter: '@CuentaCorrienteFilter.Pendiente_Afip'
                    }
                    return JSON.stringify($.extend(postData, dates));
                },
                colNames: ['', 'Cliente', 'Tipo de Comprobante', 'Numero de Comprobante', '', 'Importe', 'Fecha', 'Observación', ''],
                colModel: [
                    { name: 'Id', index: 'Id', width: 0, sortable: false, hidden: true, key: true },
                    { name: 'Cliente.RazonSocial', index: 'Cliente.RazonSocial', width: 25, align: "center", sortable: true },
                    { name: 'Tipo.Data', index: 'Tipo.Data', width: 25, align: "center", sortable: true },
                    { name: 'Numero', index: 'Numero', width: 25, align: "center", sortable: true, formatter: formatterFacturaLetraNumero },
                    { name: 'Letra', index: 'Numero', width: 25, align: "center", sortable: true, hidden: true },
                    { name: 'Total', index: 'Total', width: 25, align: "center", sortable: true, formatter: $.formatCurrency },
                    { name: 'Fecha', index: 'Fecha', width: 30, align: "center", sortable: true, formatter: 'date', formatoptions: { newformat: 'd/m/Y' } },
                    { name: 'Observacion', index: 'Observacion', width: 25, align: "center", sortable: true, editable: true, edittype: 'text' },
                    { name: 'Acciones', index: 'Acciones', width: 25, align: "center", sortable: true, formatter: ListadoPendientesAfip.AccionesFormatter }
                ],
                sortname: 'Fecha',
                sortorder: "desc",
                pager: '#GridComprobantesVentas_pager',
                rowList: [20, 40, 60],
                rowNum: 20,
                cellEdit: true,
                cellsubmit: 'clientArray',
                afterSaveCell: function (rowId, cellname, value, iRow, iCol) {
                    ListadoPendientesAfip.SaveObservacion(rowId, cellname, value, iRow, iCol);
                }
            });
            $('#GridComprobantesVentas').trigger("reloadGrid");
        },

        SaveObservacion: function (rowId, cellname, value, iRow, iCol) {
            var params = {
                url: '@Url.Action("Editar")',
                data: {
                    IdComprobante: rowId,
                    Observacion: value
                },
                success: function (ret) {
                    if (ret.Success && ret.Data != null) {

                    }
                    else {
                        $.WarningDialog('No se pudo modificar');
                    }
                }
            }
            $.AjaxPost(params);
        },

        CleanUrl: function () {
            urlir = window.location.href.split('?')[0];
            window.history.pushState({ path: urlir }, '', urlir);
        },

        ExportToExcel: function () {
            JQGridExportExcel.Export('GridComprobantesVentas', 'Listado de Comprobantes de Venta');
        },

        ReloadGrid: function () {
            $('#SelectCount').html('0');
            $("#GridComprobantesVentas").setGridParam({ datatype: 'json' });
            $('#GridComprobantesVentas').setGridParam({ page: 1 }).trigger("reloadGrid");
        },

        VerDetalleDialog: function () {
            var IdEntidad = $(this).data('id');
            var RowId = $(this).closest('tr').attr('id');
            var row = $("#GridComprobantesVentas").getRowData(RowId);
            var opt = {
                width: 950, height: 600,
                openCallback: function () {
                    $('#GridDetallesVenta').resizeGrid('GridDetallesVenta_Container');

                }
            };
            $('#ListadoPendientesAfip-detalle-dialog').OpenFormDialog('@Url.Action("Detalle")?Id=' + IdEntidad + '&opensDialog=true', 'Detalle Comprobante ' + row.Letra + row.Numero, opt);
        },

        ReRunCAEJob: function () {
            var id = $(this).data('id');
            var params = {
                url: '@Url.Action("CreateCAEJob")',
                data: { Id: id },
                success: function (result) {
                    if (result) {
                        $.WarningDialog('Se encolo nuevamente el job','success');
                    }
                    else {
                        $.WarningDialog('No se pudo modificar');
                    }
                }
            }
            $.AjaxPost(params);
        },

        AccionesFormatter: function (cellvalue, options, rowObject) {
            var ret = '';
            var url = '@Url.Action("Detalle")/' + rowObject.Id;
            @if (Roles.IsUserInRole("Administrador"))
            {
                @:ret += '<a class="boton boton-i BtnReRun" title="Correr denuevo la solicitud de cae" data-Id="' + rowObject.Id + '"><i class="fa fa-refresh i-blue"></i></a>';
            }
            ret += '<a class="boton boton-i BtnVerNuevaVentana" title="Detalle Nueva Ventana" target="_blank" data-Id="' + rowObject.Id + '" href="' + url + '"><i class="fa fa-search-plus i-blue"></i></a>';
            ret += '<a class="boton boton-i BtnVerDialog" title="Detalle Dialogo" data-Id="' + rowObject.Id + '" data-entidad="' + rowObject.Entidad + '"><i class="fa fa-files-o i-green"></i></a>';
            return ret;
        }

    }

    </script>
}
