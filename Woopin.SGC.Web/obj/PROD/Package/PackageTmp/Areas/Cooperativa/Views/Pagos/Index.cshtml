@{
    ViewBag.Title = "Pagos";
    ViewBag.SectionIcon = "truck";
    ViewBag.SectionTitle = "Listado de Pagos";
}
@*<div class="action-bar row" style="margin-bottom:20px;">
    <a class="boton place-left" id="BtnImportar" title="Importación">
        <i class="fa fa-file-excel-o i-blue"></i>  Importar
    </a>
</div>*@
<div class="action-bar row">
    <div class="select-count">
        <span id="SelectCount">0</span>
    </div>
    @*<a class="boton place-left" id="BtnDeleteSelected" title="Eliminar Seleccionados">
        <i class="fa fa-trash-o i-red"></i>  Eliminar Seleccionados
    </a>*@
    <div class="place-right search-box">
        <input type="search" name="TbxSearch" id="TbxSearch" placeholder="Buscar Pago..." />
        <button type="submit" class="button-clear hide" title="Limpiar filtro" id="BtnClearSearch"></button>
        <button type="submit" class="button-search" title="Buscar" id="BtnSearch"></button>
    </div>
    <a class="boton boton-i place-right" id="BtnRefresh" title="Actualizar">
        <i class="fa fa-refresh i-blue"></i>
    </a>
    @*<a class="boton boton-i place-right" id="BtnExportXLS" title="Exportar a Excel" >
        <span class="icon-xls"></span>
    </a>*@
</div>
<div class="table-container">
    <table id="GridPagos"></table>
    <div id="GridPagos_pager"></div>
</div>
<div id="create-dialog"></div>
<div id="edit-dialog"></div>
@*<div id="importar-Pagos-dialog"></div>*@
@section Scripts{
    @Scripts.Render("~/bundles/jqgrid")
    <script type="text/javascript">
    var ListadoPagos = {

        init: function () {
            //$('#BtnImportar').bind('click', ListadoPagos.OpenImportar);
            //$('#BtnExportXLS').click(ListadoPagos.ExportToExcel);
            /* Binding de los checkbox, contador de seleccionados */
            $.SetupSelectCount('GridPagos');
            /* Buscador de arriba */
            $.SetupSearchTextbox('#GridPagos', ["Nombre", "Apellido", "CUIT"]);
            /* Binding del boton de Refresh */
            $('#BtnRefresh').bind('click', ListadoPagos.Refresh);

            /* Eliminar Seleccionados */
            //$('#BtnDeleteSelected').click(ListadoPagos.OnEliminarSeleccionadosClick);

            $(document).off('click', '#GridPagos .RealizarPago').on('click', '#GridPagos .RealizarPago', ListadoPagos.OnClickRealizarPago);

            /* Eliminar de Grilla */
            //$(document).on('click', '.BtnEliminar', ListadoPagos.EliminarPago);
            /* Editar de la grilla */
            // Abre nueva ventana
            //$(document).on('click', '.BtnEditar', ListadoPagos.EditarPago);

            /* Armo la grilla del ABM */
            $('#GridPagos').CreateCommonGrid({
                url: '@Url.Action("GetAll", "Asociados")',
                colNames: ['', '<input type="checkbox" id="SelectAll" onclick="$.SelectAllCheckboxClick(event)"/>', 'Nombre', 'Apellido', 'CUIT', 'Cantidad Cuotas', 'Cuotas Abonadas', 'Cuotas Restantes', 'Importe Cuota', 'Cuotas A Pagar Ahora', ''],
                colModel: [
                    { name: 'Id', index: 'Id', width: 0, sortable: false, hidden: true, key: true },
                    { name: 'Seleccionados', index: 'Seleccionados', width: 10, sortable: false, formatter: SelectCheckboxFormatter, align: "center" },
                    { name: 'Nombre', index: 'Nombre', width: 25, align: "center", sortable: true },
                    { name: 'Apellido', index: 'Apellido', width: 30, align: "center", sortable: true },
                    { name: 'CUIT', index: 'CUIT', width: 30, align: "center", sortable: true },
                    { name: 'CantidadCuotas', index: 'CantidadCuotas', width: 20, align: "center" },
                    { name: 'CantidadCuotasAbonadas', index: 'CantidadCuotasAbonadas', width: 20, align: "center" },
                    { name: 'CantidadCoutasRestantes', index: 'CantidadCoutasRestantes', width: 20, align: "center", formatter: ListadoPagos.CantidadCoutasRestantes },
                    { name: 'ImporteCuota', index: 'ImporteCuota', width: 20, align: "center" },
                    { name: 'CantidadAPagar', index: 'CantidadAPagar', width: 25, align: "center", formatter: Drop_Number, formatoptions: { nameSelect: 'Pagos' } },
                    { name: 'Actions', index: 'Actions', width: 15, sortable: false, formatter: Action_Aceptar, align: "center" }
                ],
                sortname: 'Nombre',
                sortorder: "asc",
                pager: '#GridPagos_pager',
            });
            $('#GridPagos').trigger("reloadGrid");
        },

        @*OpenImportar: function () {
                $('#importar-Pagos-dialog').OpenFormDialog('@Url.Action("Importar")', 'Importación de Pagos');
            },*@

            //ExportToExcel: function () {
            //    JQGridExportExcel.Export('GridPagos', 'Listado de Pagos');
            //},

            Refresh: function () {
                ClearSelectedRows('GridPagos');
                ListadoPagos.ReloadGrid();
            },

            ReloadGrid: function () {
                $("#GridPagos").setGridParam({ datatype: 'json' });
                $('#GridPagos').setGridParam({ page: 1 }).trigger("reloadGrid");
            },

            OnClickRealizarPago: function () {
                var IdAsociado = $(this).closest('tr').attr('Id');
                var rowData = $("#GridPagos").getRowData(IdAsociado);
                var strUser = $(rowData.CantidadAPagar);
                var options = $(strUser).find("option");
                var cantidadAPagar = 0;
                $.each(options, function (i, v) {
                    aPagarIsSelected = $(v).attr("selected");
                    if(aPagarIsSelected == true || aPagarIsSelected == "selected"){
                        cantidadAPagar = i;
                        return false;
                    }
                });
                debugger;
                var params = {
                    url: '@Url.Action("Nuevo")',
                    data: {
                        Pago: { Asociado: { Id: IdAsociado } }, CantidadCuotasAPagar: ++cantidadAPagar
                    },
                    success: function (ret) {
                        if (ret.Success) {
                            //Todo cartel avisando asociado - cuanto pago y cuanto le falta pagar
                            ListadoPagos.ReloadGrid();
                        }
                    }
                }
                $.AjaxPost(params);
            },

        CantidadCoutasRestantes: function (cellvalue, options, rowObject){
            return parseFloat(rowObject.CantidadCuotas) - parseFloat(rowObject.CantidadCuotasAbonadas);
        },

            @*OnEliminarSeleccionadosClick: function(){
                var SelectedIds = $.GetSelectedRows('GridPagos');
                if (SelectedIds.length > 0) {
                    ConfirmationDialog.Show("Esta seguro que desea eliminar los Pagos seleccionadas?",
                        function () { ListadoPagos.EliminarSeleccionados(SelectedIds) });
                }
            },

            EliminarSeleccionados: function (SelectedIds) {
                var params = {
                    url: '@Url.Action("Eliminar")',
                    data: { Ids: SelectedIds },
                    success: function (ret) {
                        if (ret.Success) {
                            $.each(SelectedIds, function (i, v) {
                                $('#GridPagos').jqGrid('delRowData', v);
                            });
                            $('#SelectCount').html('0');
                        }
                    }
                }
                $.AjaxPost(params);
            },

            EliminarPago: function () {
                var Id = [$(this).closest('tr').attr('id')];
                ConfirmationDialog.Show("Esta seguro que desea eliminar el Pago?",
                    function () { ListadoPagos.EliminarSeleccionados(Id) });
            },*@

        @*OnBajarSeleccionadosClick: function(){
            var SelectedIds = $.GetSelectedRows('GridPagos');
            if (SelectedIds.length > 0) {
                ConfirmationDialog.Show("Esta seguro que desea Bajar los Pagos seleccionadas?",
                    function () { ListadoPagos.BajarSeleccionados(SelectedIds) });
            }
        },

        BajarSeleccionados: function (SelectedIds) {
            var params = {
                url: '@Url.Action("Bajar")',
                data: { Ids: SelectedIds },
                success: function (ret) {
                    if (ret.Success) {
                        $.each(SelectedIds, function (i, v) {
                            $('#GridPagos').jqGrid('delRowData', v);
                        });
                        $('#SelectCount').html('0');
                    }
                }
            }
            $.AjaxPost(params);
        },*@

        //BajarPago: function () {
        //    var Id = [$(this).closest('tr').attr('id')];
        //    ConfirmationDialog.Show("Esta seguro que desea Bajar el Pago?",
        //        function () { ListadoPagos.BajarSeleccionados(Id) });
        //},


        @*EditarPago: function () {
            var Id = $(this).closest('tr').attr('id');
            $.ShowLoader();
            window.location = '@Url.Action("Editar")/' + Id;
        }*@
    }
    $(document).ready(function () {
        ListadoPagos.init();
    });
    </script>
}