@{
    ViewBag.Title = "Grupos Ingresos";
    ViewBag.SectionIcon = "street-view";
    ViewBag.SectionTitle = "Listado de Grupos Ingresos";
}

<div class="action-bar row">
    <a class="boton place-left" id="BtnCreate" title="Crear Grupo" href="@Url.Action("Nuevo")">
        <i class="fa fa-plus-circle i-green"></i>  Crear Grupo
    </a>
    <div class="place-right search-box">
        <input type="search" name="TbxSearch" id="TbxSearch" placeholder="Buscar Grupos Ingresos..." />
        <button type="submit" class="button-clear hide" title="Limpiar filtro" id="BtnClearSearch"></button>
        <button type="submit" class="button-search" title="Buscar" id="BtnSearch"></button>
    </div>
    <a class="boton boton-i place-right" id="BtnRefresh" title="Actualizar">
        <i class="fa fa-refresh i-blue"></i>
    </a>
    <a class="boton boton-i place-right" id="BtnExportXLS" title="Exportar a Excel">
        <span class="icon-xls"></span>
    </a>
    <div class="col-md-6 place-left">
        Desde
        <input type="text" id="datestart" class="text-center" value="@DateTime.Now.AddMonths(-1).ToString("dd/MM/yyyy")" />
        al
        <input type="text" id="dateend" class="text-center" value="@DateTime.Now.ToString("dd/MM/yyyy")" />
    </div>
</div>
<div class="table-container">
    <table id="GridGruposIngresos"></table>
    <div id="GridGruposIngresos_pager"></div>
</div>
<div id="create-dialog"></div>
<div id="edit-dialog"></div>

@section Scripts{
    @Scripts.Render("~/bundles/jqgrid")
    @Scripts.Render("~/bundles/select2")
    @Styles.Render("~/Scripts/select2/select2.css")
    <script type="text/javascript">
        var ListadoGruposIngresos = {

            init: function () {
                /* Binding del boton de Refresh */
                $('#BtnRefresh').bind('click', ListadoGruposIngresos.ReloadGrid);

                /* Eliminar de Grilla */
                $(document).on('click', '.BtnEliminar', ListadoGruposIngresos.OnClickEliminar);
                /* Editar de la grilla */
                $(document).on('click', '.BtnEditar', ListadoGruposIngresos.EditarGrupoIngreso);

                /* Buscador de arriba */
                $.SetupSearchTextbox('#GridGruposIngresos', ["Descripcion"]);

                /* Armo la grilla del ABM */
                $('#GridGruposIngresos').CreateCommonGrid({
                    url: '@Url.Action("GetAllTree")',
                    serializeGridData: function (postData) {
                        dates = {
                            start: $('#datestart').val() != '' ? $('#datestart').val() : null,
                            end: $('#dateend').val() != '' ? $('#dateend').val() : null
                        }
                        return JSON.stringify($.extend(postData, dates));
                    },
                    colNames: ['', 'Dentro De', 'Descripcion', 'Descripcion del Articulo', ''],
                    colModel: [
                        { name: 'Id', index: 'Id', width: 0, sortable: false, hidden: true, key: true },
                        { name: 'DescripcionPadre', index: 'DescripcionPadre', width: 25, align: "center", sortable: true },
                        { name: 'Descripcion', index: 'Descripcion', width: 30, align: "center", sortable: true },
                        { name: 'DescripcionArticulo', index: 'DescripcionArticulo', width: 30, align: "center", sortable: true },
                        { name: 'Acciones', index: 'Acciones', width: 15, sortable: false, formatter: ABM_EditarYEliminar, align: "center" }
                    ],
                    sortname: 'Descripcion',
                    sortorder: "asc",
                    pager: '#GridGruposIngresos_pager',
                    rowList: [15, 20, 25],
                    rowNum: 15,
                    treeGrid: true,
                    treeGridModel: 'adjacency',
                    ExpandColumn: 'Descripcion',
                    height: 700
                });
                $('#GridGruposIngresos').trigger("reloadGrid");

                $('#BtnExportXLS').click(ListadoGruposIngresos.ExportToExcel);
            },

            ReloadGrid: function () {
                $("#GridGruposIngresos").setGridParam({ datatype: 'json' });
                $('#GridGruposIngresos').setGridParam({ page: 1 }).trigger("reloadGrid");
            },

            EliminarGruposIngresos: function (Id) {
                var params = {
                    url: '@Url.Action("Eliminar")',
                    data: { Id: Id },
                    success: function (ret) {
                        if (ret.Success) {
                            //TODO ver como arreglar esto para que no tenga que recargar todo de nuevo
                            $("#GridGruposIngresos").jqGrid("clearGridData", true);
                            ListadoGruposIngresos.ReloadGrid();
                        }
                    }
                }
                $.AjaxPost(params);
            },

            OnClickEliminar: function () {
                var Id = $(this).closest('tr').attr('id');
                ConfirmationDialog.Show("Esta seguro que desea eliminar el Grupo Ingreso seleccionado (tenga en cuenta que puede estar eliminando a todos los items asociados)?",
                    function () { ListadoGruposIngresos.EliminarGruposIngresos(Id) });
            },

            ExportToExcel: function () {
                JQGridExportExcel.Export('GridGruposIngresos', 'Listado de Grupos de Ingreso');
            },

            EditarGrupoIngreso: function () {
                debugger;
                var Id = $(this).closest('tr').attr('id');
                $.ShowLoader();
                window.location = '@Url.Action("Editar")/' + Id;
            }



        }
        $(document).ready(function () {
            ListadoGruposIngresos.init();
        });
    </script>
}