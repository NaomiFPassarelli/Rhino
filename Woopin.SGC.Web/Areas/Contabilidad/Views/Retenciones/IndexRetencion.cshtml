@{
    ViewBag.Title = "Retenciones";
    ViewBag.SectionIcon = "file-text-o";
    ViewBag.SectionTitle = "Listado de Retenciones";
}
<div class="action-bar row" style="margin-bottom:20px;">
    <div class="col-md-12">
        <label class="col-md-3 horizontal-label text-center">Filtrar por Tipo de Retencion</label>
        <div class="col-md-6 input-container">
            <div class="row">
                <input type="number" id="RetencionID" name="RetencionID" class="col-md-2" style="margin-top: 7px;" />
                <div class="col-md-8" style="padding:0;">
                    <input type="hidden" id="Retencion_Id" name="Retencion.Id" class="textinput" />
                </div>
                <a class="boton boton-i place-right BtnClearSelect2" data-rel="Retencion_Id" data-input="RetencionID" title="Limpiar">
                    <i class="fa fa-eraser i-blue"></i>
                </a>
            </div>
        </div>
    </div>
        <div class="col-md-12">
            <label class="col-md-3 horizontal-label text-center">Filtrar por Cliente</label>
            <div class="col-md-6 input-container">
                <div class="row">
                    <input type="number" id="ClienteID" name="ClienteID" class="col-md-2" style="margin-top: 7px;" />
                    <div class="col-md-8" style="padding:0;">
                        <input type="hidden" id="Cliente_Id" name="Cliente.Id" class="textinput" />
                    </div>
                    <a class="boton boton-i place-right BtnClearSelect2" data-rel="Cliente_Id" data-input="ClienteID" title="Limpiar">
                        <i class="fa fa-eraser i-blue"></i>
                    </a>
                </div>
            </div>
        </div>
    <div class="col-md-12">
        <label class="col-md-3 horizontal-label text-center">Filtrar por Proveedor</label>
        <div class="col-md-6 input-container">
            <div class="row">
                <input type="number" id="ProveedorID" name="ProveedorID" class="col-md-2" style="margin-top: 7px;" />
                <div class="col-md-8" style="padding:0;">
                    <input type="hidden" id="Proveedor_Id" name="Proveedor.Id" class="textinput" />
                </div>
                <a class="boton boton-i place-right BtnClearSelect2" data-rel="Proveedor_Id" data-input="ProveedorID" title="Limpiar">
                    <i class="fa fa-eraser i-blue"></i>
                </a>
            </div>
        </div>
    </div>
        <div class="col-md-3">
            <a class="boton place-left" id="btnFilterRetencion" style="margin-top: 2px;">Filtrar <i class="fa fa-filter i-blue"></i></a>
        </div>
    
    
</div>
<div class="action-bar row">
    <div class="place-right search-box">
        <input type="search" name="TbxSearch" id="TbxSearch" placeholder="Buscar Retencion..." />
        <button type="submit" class="button-clear hide" title="Limpiar filtro" id="BtnClearSearch"></button>
        <button type="submit" class="button-search" title="Buscar" id="BtnSearch"></button>
    </div>
    <a class="boton boton-i place-right" id="BtnRefresh" title="Actualizar">
        <i class="fa fa-refresh i-blue"></i>
    </a>
    <a class="boton boton-i place-right" id="BtnExportXLS" title="Exportar a Excel">
        <span class="icon-xls"></span>
    </a>
    <div class="place-right" style="margin-top:6px;margin-right:20px;">
        Desde
        <input type="text" id="datestart" class="text-center" value="@DateTime.Now.AddMonths(-1).ToString("dd/MM/yyyy")" />
        al
        <input type="text" id="dateend" class="text-center" value="@DateTime.Now.ToString("dd/MM/yyyy")" />
    </div>
</div>
<div class="table-container">
    <table id="GridRetenciones"></table>
    <div id="GridRetenciones_pager"></div>
</div>
<div id="listadoRetenciones-detalle-dialog" class="detalle-dialog"></div>

@section Scripts{
    @Scripts.Render("~/bundles/jqgrid")
    @Scripts.Render("~/Scripts/select2/select2.min.js")
    @Styles.Render("~/Scripts/select2/select2.css")
    @Scripts.Render("~/bundles/jqueryui")
    <script type="text/javascript">
    $(document).ready(function () {
        ListadoRetenciones.init();
    });
    var ListadoRetenciones = {

        init: function () {
            $('#datestart,#dateend').datepicker({ dateFormat: 'dd/mm/yy' });
            /* Binding del boton de Refresh */
            $('#BtnRefresh').bind('click', function () {
                ListadoRetenciones.LoadData();
            });
            /* Buscador de arriba */
            $.SetupSearchTextbox('#GridRetenciones', ["Fecha", "Retencion", "Cliente.RazonSocial", "Proveedor.RazonSocial"]);

            /* Armo la grilla del ABM */
            $('#GridRetenciones').CreateCommonGrid({
                url: '@Url.Action("GetRetencionFilter")',
                serializeGridData: function (postData) {
                    dates = {
                        TipoRetencion: $('#RetencionID').val() != '' ? $('#RetencionID').val() : 0,
                        IdProveedor: $('#ProveedorID').val() != '' ? $('#ProveedorID').val() : 0,
                        IdCliente: $('#ClienteID').val() != '' ? $('#ClienteID').val() : 0,
                        start: $('#datestart').val() != '' ? $('#datestart').val() : null,
                        end: $('#dateend').val() != '' ? $('#dateend').val() : null
                    }
                    return JSON.stringify($.extend(postData, dates));
                },
                colNames: ['', 'Fecha', 'Retencion', 'Cliente', 'Proveedor', 'Total',  ''],
                colModel: [
                    { name: 'Id', index: 'Id', width: 0, sortable: false, hidden: true, key: true },
                    { name: 'Fecha', index: 'FechaCreacion', width: 200, align: "center", sortable: true, formatter: 'date', formatoptions: { newformat: 'd/m/Y' } },
                    { name: 'Retencion.Abreviatura', index: 'Retencion.Abreviatura', width: 200, align: "center", sortable: true },
                    { name: 'Cliente.RazonSocial', index: 'Cliente.RazonSocial', width: 200, align: "center", sortable: true },
                    { name: 'Proveedor.RazonSocial', index: 'Proveedor.RazonSocial', width: 200, align: "center", sortable: true },
                    { name: 'Total', index: 'Total', width: 200, align: "center", sortable: true, formatter: $.formatCurrency },
                    { name: 'Acciones', index: 'Acciones', width: 100, align: "center", sortable: true, formatter: ListadoRetenciones.AccionesFormatter }
                ],
                sortname: 'Fecha',
                sortorder: "desc",
                pager: '#GridRetenciones_pager',
                rowList: [20, 40, 60],
                rowNum: 20
            });
            $('#GridRetenciones').trigger("reloadGrid");
            $('#Retencion_Id').select2(
               {
                   placeholder: "Seleccione Un Tipo de Retencion",
                   ajax: {
                       url: "@Url.Action("GetRetencionesCombo", "Retenciones")",
                       dataType: 'json',
                       params: { type: "POST" },
                       data: function (t, p) {
                           debugger;
                           return { where: t };
                       },
                       results: function (data, page) {
                           debugger;
                           return { results: data.Data.Items };
                       }
                   },
               });
            $('#Retencion_Id').on("select2-selecting", ListadoRetenciones.OnRetencionSelected);
            $('#RetencionID').change(ListadoRetenciones.OnRetencionChange);
            $('#Cliente_Id').select2(
               {
                   placeholder: "Seleccione Un Cliente",
                   minimumInputLength: 2,
                   ajax: {
                       url: "@Url.Action("GetClientesCombo", "Clientes", new { Area = "Ventas" })",
                       dataType: 'json',
                       params: { type: "POST" },
                       data: function (t, p) {
                           return { where: t };
                       },
                       results: function (data, page) {
                           return { results: data.Data.Items };
                       }
               },
            });
            $('#Cliente_Id').on("select2-selecting", ListadoRetenciones.OnClienteSelected);
            $('#ClienteID').change(ListadoRetenciones.OnClienteChange);
            $('#Proveedor_Id').select2(
                   {
                       placeholder: "Seleccione Un Proveedor",
                       minimumInputLength: 2,
                       ajax: {
                           url: "@Url.Action("GetProveedoresCombo", "Proveedores", new { Area = "Compras" })",
                       dataType: 'json',
                       params: { type: "POST" },
                       data: function (t, p) {
                           return { where: t };
                       },
                       results: function (data, page) {
                           return { results: data.Data.Items };
                       }
                   },
            });
            $('#Proveedor_Id').on("select2-selecting", ListadoRetenciones.OnProveedorSelected);
            $('#ProveedorID').change(ListadoRetenciones.OnProveedorChange);
            $('#btnFilterRetencion').click(ListadoRetenciones.LoadData);
            $(document).on('click', '.BtnVerDialog', ListadoRetenciones.VerDetalleDialog);
            $('#BtnExportXLS').click(ListadoRetenciones.ExportToExcel);
            $('.BtnClearSelect2').on('click', function () {
                var IdClear = $(this).attr('data-rel');
                var IdClearInput = $(this).attr('data-input');
                ListadoRetenciones.ClearSelect2(IdClear, IdClearInput);
            });
        },

        ClearSelect2: function (IdClear, IdClearInput) {
            $("#" + IdClearInput).val("");
            $("#" + IdClear).select2("val", "");
        },

        ExportToExcel: function () {
            JQGridExportExcel.Export('GridRetenciones', 'Listado de Retenciones');
        },

        VerDetalleDialog: function () {
            var RowId = $(this).closest('tr').attr('id');
            var opt = {
                width: 900, height: 600,
                openCallback: function () {
                    $('#GridRetencion').resizeGrid('GridRetencion_Container');
                }
            };
            $('#listadoRetenciones-detalle-dialog').OpenFormDialog('@Url.Action("DetalleRetencion")?Id=' + $(this).data('id') + '&opensDialog=true', 'Detalle Retencion N°' + RowId, opt);
        },

        OnRetencionChange: function () {
            var Id = $('#RetencionID').val();
                if (Id == "") { return; }
                valid = ListadoRetenciones.ValidateFilters();
                if (!valid.success) {
                    return $.WarningDialog(valid.message);
                }
                var params = {
                    url: '@Url.Action("GetRetencion", "Retenciones")',
                    data: { Id: Id },
                    success: function (ret) {
                        if (ret.Success && ret.Data != null) {
                            var Retencion = ret.Data.Descripcion + '(' + ret.Data.Abreviatura + ')';
                            $('#Retencion_Id').select2('data', { id: Id, text: Retencion });
                        }
                        else {
                            // Not Found
                            $.WarningDialog('El tipo de Retencion no existe!', 'error');
                            $('#Retencion_Id').select2('data', null);
                        }
                    }
                }
                $.AjaxPost(params);
            },

        OnRetencionSelected: function (e) {
            $('#RetencionID').val(e.val)
        },

        OnClienteChange: function () {
            var Id = $('#ClienteID').val();
            if (Id == "") { return; }
            valid = ListadoRetenciones.ValidateFilters();
            if (!valid.success) {
                return $.WarningDialog(valid.message);
            }
            var params = {
                url: '@Url.Action("GetCliente", "Clientes", new {Area = "Ventas"} )',
                data: { IdCliente: Id },
                success: function (ret) {
                    if (ret.Success && ret.Data != null) {
                        var Cliente = ret.Data.RazonSocial + '(' + ret.Data.CUIT + ')';
                        $('#Cliente_Id').select2('data', { id: Id, text: Cliente });
                    }
                    else {
                        // Not Found
                        $.WarningDialog('El Cliente no existe!', 'error');
                        $('#Cliente_Id').select2('data', null);
                    }
                }
            }
            $.AjaxPost(params);
        },

        OnClienteSelected: function (e) {
            $('#ClienteID').val(e.val)
        },

        OnProveedorChange: function () {
            var Id = $('#ProveedorID').val();
            if (Id == "") { return; }
            valid = ListadoRetenciones.ValidateFilters();
            if (!valid.success) {
                return $.WarningDialog(valid.message);
            }
            var params = {
                url: '@Url.Action("GetProveedor", "Proveedores", new { Area = "Compras" })',
                data: { IdProveedor: Id },
                success: function (ret) {
                    if (ret.Success && ret.Data != null) {
                        var Proveedor = ret.Data.RazonSocial + '(' + ret.Data.CUIT + ')';
                        $('#Proveedor_Id').select2('data', { id: Id, text: Proveedor });
                    }
                    else {
                        // Not Found
                        $.WarningDialog('El Proveedor no existe!', 'error');
                        $('#Proveedor_Id').select2('data', null);
                    }
                }
            }
            $.AjaxPost(params);
        },

        OnProveedorSelected: function (e) {
            $('#ProveedorID').val(e.val)
        },

        ReloadGrid: function () {
            $('#SelectCount').html('0');
            $("#GridRetenciones").setGridParam({ datatype: 'json' });
            $('#GridRetenciones').setGridParam({ page: 1 }).trigger("reloadGrid");
        },

        AccionesFormatter: function (cellvalue, options, rowObject) {
            var ret = '';
            var url = '@Url.Action("DetalleRetencion")/' + rowObject.Id;
            ret += '<a class="boton boton-i BtnVerNuevaVentana" title="Detalle Nueva Ventana" target="_blank" data-Id="' + rowObject.Id + '" href="' + url + '"><i class="fa fa-search-plus i-blue"></i></a>';
            ret += '<a class="boton boton-i BtnVerDialog" title="Detalle Dialogo" data-Id="' + rowObject.Id + '"><i class="fa fa-files-o i-green"></i></a>';
            return ret;
        },

        LoadData: function () {
            ListadoRetenciones.CompletarFiltros();
            valid = ListadoRetenciones.ValidateFilters();
            if (!valid.success) {
                return $.WarningDialog(valid.message);
            }
            ListadoRetenciones.ReloadGrid();
        },

        ValidateFilters: function () {
            var IdProveedor = $('#ProveedorID').val();
            if (IdProveedor != "" && (!$.isNumeric(IdProveedor) || IdProveedor <= 0)) {
                return { success: false, message: 'El N° de Proveedor no es correcto' };
            }
            var IdCliente = $('#ClienteID').val();
            if (IdCliente != "" && (!$.isNumeric(IdCliente) || IdCliente <= 0)) {
                return { success: false, message: 'El N° de Cliente no es correcto' };
            }
            var IdRetencion = $('#RetencionID').val();
            if (IdRetencion != "" && (!$.isNumeric(IdRetencion) || IdRetencion <= 0)) {
                return { success: false, message: 'El Tipo de Retencion no es correcto' };
            }
            return $.ValidateDates($('#datestart').val(), $('#dateend').val());
        },

        CompletarFiltros: function () {
            if ($('#datestart').val() == "" && $('#dateend').val() == "") {
                $('#datestart').val("@DateTime.Now.AddMonths(-1).ToString("dd/MM/yyyy")");
                $('#dateend').val("@DateTime.Now.ToString("dd/MM/yyyy")");
            }
            if ($('#dateend').val() == "") {
                $('#dateend').val("@DateTime.Now.ToString("dd/MM/yyyy")");
            }
            if ($('#datestart').val() == "") {
                day = (($('#dateend').val()).split("/"))[0];
                month = (($('#dateend').val()).split("/"))[1] - 1;
                year = (($('#dateend').val()).split("/"))[2];

                date_start = new Date(year, month - 1, day);
                $('#datestart').val(date_start.format("dd/mm/yyyy"));
            }
        }
    }
    </script>
}