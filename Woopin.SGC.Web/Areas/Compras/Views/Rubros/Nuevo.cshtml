@model Woopin.SGC.Model.Compras.RubroCompra

@{
    Layout = null;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div id="Alert-Dialog-Container"></div>
    <fieldset class="form-horizontal">
        <div class="form-group @if (!ViewData.ModelState.IsValidField("Descripcion"))
                        { @Html.Raw("has-error");}">
            @Html.LabelFor(model => model.Descripcion, new { @class = "col-md-4 horizontal-label" })
            <div class="col-md-6 input-container">
                @Html.TextBoxFor(model => model.Descripcion, new { @class = "textinput" })
                @Html.ValidationMessageFor(model => model.Descripcion, null, new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group" id="SubRubro_Container">
            @Html.LabelFor(model => model.CodigoPadre, new { @class = "col-md-4 horizontal-label" })
            <div class="col-md-6 input-container">
                @Html.DropDownListFor(model => model.CodigoPadre, (IEnumerable<SelectListItem>)ViewBag.SubRubros, new { @class = "textinput" })
                @Html.ValidationMessageFor(model => model.CodigoPadre, null, new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PercepcionIVA, new { @class = "col-md-4 horizontal-label" })
            <div class="col-md-6 input-container">
                <input class="textinput" id="PercepcionIVA" name="PercepcionIVA" type="checkbox" value="true">
                @Html.ValidationMessageFor(model => model.PercepcionIVA, null, new { @class = "help-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PercepcionIIBB, new { @class = "col-md-4 horizontal-label" })
            <div class="col-md-6 input-container">
                <input class="textinput" id="PercepcionIIBB" name="PercepcionIIBB" type="checkbox" value="true">
                @Html.ValidationMessageFor(model => model.PercepcionIIBB, null, new { @class = "help-block" })
            </div>
        </div>
    </fieldset>
}

<div class="button-pane clearfix">
    <div class="button-set">
        <a class="boton place-left" id="BtnSubmit" title="Guardar">
            <i class="fa fa-check-circle-o i-green"></i>  Crear Rubro
        </a>
        <a class="boton place-left" title="Cancelar" onclick="$.CloseOpenedDialog()">
            <i class="fa fa-times-circle-o i-red"></i>  Cancelar
        </a>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/select2")
@Styles.Render("~/Scripts/select2/select2.css")
<script type="text/javascript">
    $(document).ready(function () {
        $('#BtnSubmit').FormSubmit({
            enter: true,
            success: function (data) {
                if (data.Success) {
                    $('#GridRubros').jqGrid('addRowData', 'Id', data.Rubro);
                    $('#GridRubros').trigger("reloadGrid");
                    _OpenDialog.dialog('close');
                }
                else {
                    $('#Alert-Dialog-Container').NewAlert('error', $.makeErrorMsgList(data.ErrorMessage, data.Errors));
                }
            }
        });
        $('#PercepcionIVA').change(function () {
            if ($('#PercepcionIVA').is(":checked")) {
                $('#PercepcionIIBB').attr('checked', false);
                $('#SubRubro_Container').hide();
            }
            else {
                $('#SubRubro_Container').show();
            }
        });
        $('#PercepcionIIBB').change(function () {
            if ($('#PercepcionIIBB').is(":checked")) {
                $('#PercepcionIVA').attr('checked', false);
                $('#SubRubro_Container').hide();
            }
            else {
                $('#SubRubro_Container').show();
            }
        });
    });
</script>