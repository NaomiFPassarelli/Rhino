@using Woopin.SGC.Web.HtmlHelper
@using Woopin.SGC.Model.Negocio
@model Woopin.SGC.Model.Ventas.ComprobanteVenta

@{
    if (ViewBag.OpensDialog)
    {
        Layout = null;
    }
    ViewBag.Title = "Detalle Comprobante " + Model.GetLetraNumero();
    ViewBag.SectionIcon = "file-text-o";
    ViewBag.SectionTitle = "Detalle Comprobante " + Model.GetLetraNumero();
    var dirreccionCompleta = Model.Cliente.Direccion + " " + Model.Cliente.Numero + " " + Model.Cliente.Piso + " " + Model.Cliente.Departamento + " - " + Model.Cliente.Localizacion.Nombre;
    
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "comprobante-header" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
    @if (!ViewBag.OpensDialog)
    {
    <div class="" style="float:left;">
        <div class="col-md-12">
            <a class="boton place-left" href='@Url.Action("Index")' ><i class="fa fa-arrow-left i-red"></i> Volver al Listado</a>
        </div>
    </div>
    }
        @Html.LabelStatus(@Model.Estado.ToString(), (int)@Model.Estado, (bool)ViewBag.OpensDialog)
        @if (!ViewBag.OpensDialog && Model.CanAnular())
        {
                <a class="boton boton-i BtnEliminar" style="float: right; border-bottom-color: #bd362f; " title="Anular" data-id="@Model.Id">
                    <i class="fa fa-trash-o" style="padding: 2px 5px 0px 5px; color: #666666;">
                        <br /><span style="color: #666666; font-size: 12px; padding: 0px; margin: 0px;">Anular</span>
                    </i>
                </a>
                <a class="boton boton-i BtnEliminarCompleto" style="float: right; border-bottom-color: #bd362f; " title="Eliminar" data-id="@Model.Id">
                    <i class="fa fa-trash-o" style="padding: 2px 5px 0px 5px; color: #666666;">
                        <br /><span style="color: #666666; font-size: 12px; padding: 0px; margin: 0px;">Eliminar</span>
                    </i>
                </a>
        }
        @if (!ViewBag.OpensDialog)
        {
            if(Model.CAE != null)
            {
                <a class="boton boton-i BtnImprimir" style="float: right; border-bottom-color: #2a7442; " title="Imprimir" href="@Url.Action("DescargarPDF", "ComprobantesVentas", new { Id = Model.Id })">
                    <i class="fa fa-print" style="padding: 2px 5px 0px 5px; color: #666666;">
                        <br /><span style="color: #666666; font-size: 12px; padding: 0px; margin: 0px;">Imprimir FE</span>
                    </i>
                </a>
                <a class="boton boton-i" style="float: right; border-bottom-color: #2a7442; " data-id="@Model.Id"  title="Enviar por correo" id="BtnEnviarMail">
                    <i class="fa fa-print" style="padding: 2px 5px 0px 5px; color: #666666;">
                        <br /><span style="color: #666666; font-size: 12px; padding: 0px; margin: 0px;">Enviar FE al Cliente</span>
                    </i>
                </a>
            }

        }

        <div class="comprobante">
            <div class="col-md-12">
                <div class="col-md-7">
                    @Html.LabelFor(model => model.Cliente, new { @class = "col-md-3 horizontal-label readonly-label" })
                    <div class="col-md-9 input-container">
                        <div class="row">
                            <input type="number" id="ClienteID" name="ClienteID" class="col-md-2" style="margin-top: 7px;" readonly value="@Model.Cliente.Id" />
                            <div class="col-md-10" style="padding:0;">
                                <input type="text" id="Cliente_Id" name="Cliente.Id" class="textinput" value="@Model.Cliente.RazonSocial" />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-1 ">
                    <div class="col-md-12 input-container padding-left-2 font-size-22">
                        <input type="hidden" id="LetraCliente" />
                        @Html.TextBoxFor(model => model.Letra, new { @class = "selectinput", @id = "Letra", @readonly = "readonly" })
                    </div>
                </div>


                <div class="col-md-4">
                    <div class="col-md-12 input-container">
                        @Html.TextBoxFor(model => model.Tipo.Data, new { @class = "textinput", @readonly = "readonly" })
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-7">
                    @Html.Label("Domicilio", new { @class = "col-md-3 horizontal-label readonly-label" })
                    <div class="col-md-9 input-container">
                        @Html.TextBox("Direccion",dirreccionCompleta, new { @class = "textinput", @id = "Domicilio", @readonly = "readonly" })
                    </div>
                </div>

                <div class="col-md-5">
                    @Html.LabelFor(model => model.Numero, new { @class = "col-md-4 horizontal-label readonly-label" })
                    <div class="col-md-8 input-container">
                        @Html.TextBoxFor(model => model.Numero, new { @class = "textinput", @id = "Numero", @readonly = "readonly" })
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Cliente.CategoriaIva, new { @class = "col-md-6 horizontal-label readonly-label" })
                    <div class="col-md-6 input-container padding-left-2">
                        @Html.TextBoxFor(model => model.Cliente.CategoriaIva.Nombre, new { @class = "textinput", @id = "Iva", @readonly = "readonly" })
                    </div>
                </div>

                <div class="col-md-3 padding-left-2">
                    @Html.LabelFor(model => model.Cliente.CUIT, new { @class = "col-md-3 horizontal-label padding-left-2 readonly-label" })
                    <div class="col-md-9 input-container padding-left-2">
                        @Html.TextBoxFor(model => model.Cliente.CUIT, new { @class = "textinput padding-left-2", @id = "CUIT", @readonly = "readonly" })
                    </div>
                </div>

                <div class="col-md-5">
                    @Html.LabelFor(model => model.Fecha, new { @class = "col-md-4 horizontal-label readonly-label" })
                    <div class="col-md-8 input-container">
                        <input class="text-box single-line textinput" data-val="true" data-val-required="La Fecha es requerida" id="Fecha" name="Fecha" type="text" value="@Model.Fecha.ToString("dd/MM/yyyy")" readonly>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-7">
                    @Html.LabelFor(model => model.CondicionVenta, new { @class = "col-md-3 horizontal-label readonly-label" })
                    <div class="col-md-7 input-container">
                        @Html.TextBoxFor(model => model.CondicionVenta.Data, new { @class = "textinput", @readonly = "readonly" })
                    </div>
                </div>
                @if (ViewBag.EsServicio)
                {
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.MesPrestacion, new { @class = "col-md-4 horizontal-label readonly-label" })
                        <div class="col-md-8 input-container">
                            @Html.TextBoxFor(model => model.MesPrestacion, new { @class = "textinput", @placeholder = "mm-aaaa", @readonly = "readonly" })
                        </div>
                    </div>
                }
            </div>
            <div class="col-md-12">
                <div class="col-md-7 ">
                    @Html.LabelFor(model => model.Moneda, new { @class = "col-md-3 horizontal-label readonly-label" })
                    <div class="col-md-4 input-container">
                        @Html.TextBoxFor(model => model.Moneda.Nombre, new { @class = "textinput", @readonly = "readonly" })
                    </div>
                    <div class="col-md-4 input-container">
                        @{
                            var CssClass = Model.Moneda.Predeterminado ? "selectinput hidden" : "selectinput";
                        }
                        @Html.TextBoxFor(model => model.Cotizacion, new { @class = CssClass, placeholder = "Cotización de la moneda", @readonly = "readonly" })
                    </div>
                    <div class="clearfix"></div>
                </div>
                @if(Model.Tipo.AfipData != null)
                {
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.CAE, new { @class = "col-md-4 horizontal-label readonly-label" })
                        <div class="col-md-8 input-container">
                            @Html.TextBoxFor(model => model.CAE, new { @class = "textinput", @readonly = "readonly" })
                        </div>
                    </div>
                }

            </div>
            <div class="col-md-12">
                <div class="col-md-7">
                    @Html.LabelFor(model => model.MailCobro, new { @class = "col-md-3 horizontal-label readonly-label" })
                    <div class="col-md-9 input-container">
                        @Html.TextBoxFor(model => model.MailCobro, new { @class = "textinput", @readonly = "readonly" })
                    </div>
                </div>

                <div class="col-md-5">
                    @Html.LabelFor(model => model.NombreCobro, new { @class = "col-md-4 horizontal-label readonly-label" })
                    <div class="col-md-8 input-container">
                        @Html.TextBoxFor(model => model.NombreCobro, new { @class = "textinput", @readonly = "readonly" })
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
}
<div class="col-md-12 table-container detalles" id="GridDetallesVenta_Container">
    <table id="GridDetallesVenta"></table>
    <div id="GridDetallesVenta_pager"></div>
</div>

<div class="comprobante comprobante-right col-md-4">
    <div class="col-md-12 @if (!ViewData.ModelState.IsValidField("Subtotal"))
                                  { @Html.Raw("has-error");
                                  }">
        @Html.LabelFor(model => model.Subtotal, new { @class = "col-md-4 horizontal-label readonly-label" })
        <div class="col-md-6 input-container">
            @Html.TextBoxFor(model => model.Subtotal, "{0:C}", new { @class = "textinput", @id = "Subtotal", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Subtotal, null, new { @class = "help-block" })
        </div>
    </div>

    <div class="col-md-12 @if (!ViewData.ModelState.IsValidField("IVA"))
                                  { @Html.Raw("has-error");
                                  }">
        @Html.LabelFor(model => model.IVA, new { @class = "col-md-4 horizontal-label readonly-label" })
        <div class="col-md-6 input-container">
            @Html.TextBoxFor(model => model.IVA, "{0:C}", new { @class = "textinput", @id = "IVA", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.IVA, null, new { @class = "help-block" })
        </div>
    </div>

    <div class="col-md-12 @if (!ViewData.ModelState.IsValidField("Total"))
                                  { @Html.Raw("has-error");
                                  }" style="padding-top:10px;">
        <div class="totalSlash"></div>
        @Html.LabelFor(model => model.Total, new { @class = "col-md-4 horizontal-label readonly-label" })
        <div class="col-md-6 input-container">
            @Html.TextBoxFor(model => model.Total, "{0:C}", new { @class = "textinput", @id = "Total", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Total, null, new { @class = "help-block" })
        </div>
    </div>
    <div class="clearfix"></div>
</div>
<div class="comprobante place-left col-md-4" style="margin-top:40px;">
    <div class="col-md-12">
        @Html.LabelFor(model => model.IVA105, new { @class = "col-md-4 horizontal-label readonly-label" })
        <div class="col-md-6 input-container">
            @Html.TextBoxFor(model => model.IVA105, "{0:C}", new { @class = "textinput", @id = "IVA105", @readonly = "readonly" })
        </div>
    </div>

    <div class="col-md-12">
        @Html.LabelFor(model => model.IVA21, new { @class = "col-md-4 horizontal-label readonly-label" })
        <div class="col-md-6 input-container">
            @Html.TextBoxFor(model => model.IVA21, "{0:C}", new { @class = "textinput", @id = "IVA21", @readonly = "readonly" })
        </div>
    </div>
    <div class="col-md-12">
        @Html.LabelFor(model => model.IVA27, new { @class = "col-md-4 horizontal-label readonly-label" })
        <div class="col-md-6 input-container">
            @Html.TextBoxFor(model => model.IVA27, "{0:C}", new { @class = "textinput", @id = "IVA27", @readonly = "readonly" })
        </div>
    </div>
</div>
<div class="clearfix"></div>
@section Scripts{
    @Html.Partial("js/_Detalle");
}
@if (ViewBag.OpensDialog)
{
    Html.RenderPartial("js/_Detalle");
}